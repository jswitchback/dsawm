/* Import Sass mixins, variables, Compass modules, etc. */
/* Darken table when in a ui-block */
/*
  Mixins are slightly modified from Benjamin Doherty's first implementations: http://gist.github.com/377912
  rgba-background mixin can now be passed an option $dir variable
*/
/**
 * @file
 * Positioning for a responsive layout.
 *
 * Define CSS classes to create a fluid grid layout with optional sidebars
 * depending on whether blocks are placed in the left or right sidebars.
 *
 * This layout uses the Zen Grids plugin for Compass: http://zengrids.com
 */
body,
html {
  margin: 0;
  padding: 0;
  height: 100%;
}

*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

#main,
#header,
#footer,
#page-title,
.region-bottom {
  margin-left: auto;
  margin-right: auto;
  min-width: 320px;
  max-width: 980px;
}

/*
 * Center the page.
 */
#main,
#header,
.region-bottom {
  margin-left: auto;
  margin-right: auto;
  min-width: 320px;
  max-width: 980px;
}

/*
 * Apply the shared properties of grid items in a single, efficient ruleset.
 */
#header,
#content,
.region-sidebar-first,
.region-sidebar-second,
#footer {
  padding-left: 24px;
  padding-right: 24px;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -ms-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
}

/*
 * Containers for grid items and flow items.
 */
/* Clears floats without overflow hidden */
#header:before, #header:after,
#main:before,
#main:after,
.region-highlighted:before,
.region-highlighted:after,
#mobile-sidebar:before,
#mobile-sidebar:after,
#page-title:before,
#page-title:after,
.region-footer .region-inner:before,
.region-footer .region-inner:after {
  content: "";
  display: table;
}
#header:after,
#main:after,
.region-highlighted:after,
#mobile-sidebar:after,
#page-title:after,
.region-footer .region-inner:after {
  clear: both;
}

/* PHONE PORTRAIT LAYOUT (min-width: 480px)
   ========================================================================== */
@media (min-width: 30em) and (max-width: 61.1875em) {
  /*
   * The layout when there is only one sidebar, the left one.
   */
}
@media (min-width: 47.5em) {
  /*
   * The layout when there is only one sidebar, the left one.
   */
  .sidebar-first #content, .two-sidebars #content {
    float: left;
    width: 70.83333%;
    margin-left: 29.16667%;
    margin-right: -100%;
  }
  .sidebar-first #sidebar-first, .two-sidebars #sidebar-first {
    float: left;
    width: 29.16667%;
    margin-left: 0%;
    margin-right: -29.16667%;
  }

  /*
   * The layout when there is only one sidebar, the right one.
   */
  .sidebar-second .region-content, .two-sidebars .region-content {
    float: left;
    width: 66.66667%;
    margin-left: 0%;
    margin-right: -66.66667%;
  }
  .sidebar-second .region-sidebar-second, .two-sidebars .region-sidebar-second {
    float: left;
    width: 33.33333%;
    margin-left: 66.66667%;
    margin-right: -100%;
  }
}
/* TABLET PORTRAIT LAYOUT (min-width: 600px to 960px)
   ========================================================================== */
/* DESKTOP LAYOUT (min-width: 960px+)
  ========================================================================== */
@media (min-width: 61.25em) {
 /*
* The layout when there is only one sidebar, the left one.
*/
  .sidebar-first #content, .two-sidebars #content {
    float: left;
    width: 70.83333%;
    margin-left: 29.16667%;
    margin-right: -100%;
  }
  .sidebar-first #sidebar-first, .two-sidebars #sidebar-first {
    float: left;
    width: 29.16667%;
    margin-left: 0%;
    margin-right: -29.16667%;
  }

  /*
   * The layout when there is only one sidebar, the left one.
   */
}
/* Import Sass mixins, variables, Compass modules, etc. */
/* Darken table when in a ui-block */
/*
  Mixins are slightly modified from Benjamin Doherty's first implementations: http://gist.github.com/377912
  rgba-background mixin can now be passed an option $dir variable
*/
/**
 * @file
 * CSS to be coupled with classes added via template php.
 *
 *
 * This layout uses the Zen Grids plugin for Compass: http://zengrids.com  
 */
/* Use CSS to show general grid layout. Not 100% accurate representation
body {
  margin: 0;
  padding: 0;
  @include background-grid;
} */
.max-grid {
  margin-left: 0;
  padding-left: 0;
  margin-left: -12px;
  margin-right: -12px;
}
.max-grid li {
  list-style-type: none;
  list-style-image: none;
}

/* 1 COlUMN LAYOUT (Generally min-width: 320px)
   ========================================================================== */
@media (min-width: 30em) and (max-width: 47.4375em) {
  .max-four:nth-child(2n+1) {
    float: left;
    width: 50%;
    margin-left: 0%;
    margin-right: -50%;
    clear: left;
  }
  .max-four:nth-child(2n+2) {
    float: left;
    width: 50%;
    margin-left: 50%;
    margin-right: -100%;
  }

  .max-six:nth-child(2n+1) {
    float: left;
    width: 50%;
    margin-left: 0%;
    margin-right: -50%;
    clear: left;
  }
  .max-six:nth-child(2n+2) {
    float: left;
    width: 50%;
    margin-left: 50%;
    margin-right: -100%;
  }
}
/* 2 COLUMN LAYOUT (Generally min-width: 600px to 759px)
   ========================================================================== */
@media (min-width: 37.5em) {
  .max-two:nth-child(2n+1) {
    float: left;
    width: 50%;
    margin-left: 0%;
    margin-right: -50%;
    clear: left;
  }
  .max-two:nth-child(2n+2) {
    float: left;
    width: 50%;
    margin-left: 50%;
    margin-right: -100%;
  }
}
@media (min-width: 37.5em) and (max-width: 47.4375em) {
  .max-three:nth-child(3n+1), .max-five:nth-child(3n+1) {
    float: left;
    width: 50%;
    margin-left: 0%;
    margin-right: -50%;
    clear: left;
  }
  .max-three:nth-child(3n+2), .max-five:nth-child(3n+2) {
    float: left;
    width: 50%;
    margin-left: 50%;
    margin-right: -100%;
  }
  .max-three:nth-child(3n+3), .max-five:nth-child(3n+3) {
    float: left;
    width: 100%;
    margin-left: 0%;
    margin-right: -100%;
    clear: both;
  }
  .max-three:nth-child(3n+3).contained, .max-five:nth-child(3n+3).contained {
    width: 50%;
  }
}
/* 3 COLUMN LAYOUT (Generally min-width: 760px)
   ========================================================================== */
@media (min-width: 47.5em) {
  .max-three:nth-child(3n+1), .max-six:nth-child(3n+1) {
    float: left;
    width: 33.33333%;
    margin-left: 0%;
    margin-right: -33.33333%;
    clear: left;
  }
  .max-three:nth-child(3n+2), .max-six:nth-child(3n+2) {
    float: left;
    width: 33.33333%;
    margin-left: 33.33333%;
    margin-right: -66.66667%;
  }
  .max-three:nth-child(3n+3), .max-six:nth-child(3n+3) {
    float: left;
    width: 33.33333%;
    margin-left: 66.66667%;
    margin-right: -100%;
  }
}
@media (min-width: 47.5em) and (max-width: 61.1875em) {
  .max-four:nth-child(3n+1) {
    float: left;
    width: 33.33333%;
    margin-left: 0%;
    margin-right: -33.33333%;
    clear: left;
  }
  .max-four:nth-child(3n+2) {
    float: left;
    width: 33.33333%;
    margin-left: 33.33333%;
    margin-right: -66.66667%;
  }
  .max-four:nth-child(3n+3) {
    float: left;
    width: 33.33333%;
    margin-left: 66.66667%;
    margin-right: -100%;
  }

  .max-five:nth-child(5n+1) {
    float: left;
    width: 33.33333%;
    margin-left: 0%;
    margin-right: -33.33333%;
    clear: left;
  }
  .max-five:nth-child(5n+2) {
    float: left;
    width: 33.33333%;
    margin-left: 33.33333%;
    margin-right: -66.66667%;
  }
  .max-five:nth-child(5n+3) {
    float: left;
    width: 33.33333%;
    margin-left: 66.66667%;
    margin-right: -100%;
  }
  .max-five:nth-child(5n+4) {
    float: left;
    width: 50%;
    margin-left: 0%;
    margin-right: -50%;
    clear: left;
  }
  .max-five:nth-child(5n+5) {
    float: left;
    width: 50%;
    margin-left: 50%;
    margin-right: -100%;
  }
}
/* 4 COLUMN LAYOUT (Generally min-width: 960px)
   ========================================================================== */
@media (min-width: 61.25em) {
  .max-four:nth-child(4n+1) {
    float: left;
    width: 25%;
    margin-left: 0%;
    margin-right: -25%;
    clear: left;
  }
  .max-four:nth-child(4n+2) {
    float: left;
    width: 25%;
    margin-left: 25%;
    margin-right: -50%;
  }
  .max-four:nth-child(4n+3) {
    float: left;
    width: 25%;
    margin-left: 50%;
    margin-right: -75%;
  }
  .max-four:nth-child(4n+4) {
    float: left;
    width: 25%;
    margin-left: 75%;
    margin-right: -100%;
  }

  .max-five:nth-child(5n+1) {
    float: left;
    width: 25%;
    margin-left: 0%;
    margin-right: -25%;
    clear: left;
  }
  .max-five:nth-child(5n+2) {
    float: left;
    width: 25%;
    margin-left: 25%;
    margin-right: -50%;
  }
  .max-five:nth-child(5n+3) {
    float: left;
    width: 25%;
    margin-left: 50%;
    margin-right: -75%;
  }
  .max-five:nth-child(5n+4) {
    float: left;
    width: 25%;
    margin-left: 75%;
    margin-right: -100%;
  }
  .max-five:nth-child(5n+5) {
    width: 100%;
    float: right;
    margin-left: 0;
    margin-right: 0;
    clear: none;
    padding-right: 24px;
    clear: left;
  }
  .max-five:nth-child(5n+5).contained {
    width: 25%;
  }
}
